syntax = "proto3";

package wings.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service OffsetRegistryService {
  rpc CommitFolio(CommitFolioRequest) returns (CommitFolioResponse);
  rpc OffsetLocation(OffsetLocationRequest) returns (OffsetLocationResponse);
  rpc ListTopicPartitionStates(ListTopicPartitionStatesRequest) returns (ListTopicPartitionStatesResponse);
}

message CommitFolioRequest {
  string namespace = 1;
  string file_ref = 2;
  repeated CommitPageRequest pages = 3;
}

message CommitFolioResponse {
  repeated CommitPageResponse pages = 1;
}

message OffsetLocationRequest {
  string topic = 1;
  uint64 offset = 2;
  optional PartitionValue partition = 3;
  google.protobuf.Timestamp deadline = 4;
}

message OffsetLocationResponse {
  oneof location {
    FolioLocation folio_location = 1;
  }
}

message ListTopicPartitionStatesRequest {
  string topic = 1;
  optional int32 page_size = 2;
  optional string page_token = 3;
}

message ListTopicPartitionStatesResponse {
  repeated PartitionValueState states = 1;
  optional string next_page_token = 2;
}

message CommitPageRequest {
  string topic = 1;
  optional PartitionValue partition = 2;
  uint32 num_messages = 3;
  uint64 offset_bytes = 4;
  uint64 batch_size_bytes = 5;
  repeated CommitBatchRequest batches = 6;
}

message CommitPageResponse {
  string topic = 1;
  optional PartitionValue partition = 2;
  uint64 start_offset = 3;
  uint64 end_offset = 4;
  repeated CommitBatchResponse batches = 5;
}

message FolioLocation {
  string file_ref = 1;
  uint64 offset_bytes = 2;
  uint64 size_bytes = 3;
  uint64 start_offset = 4;
  uint64 end_offset = 5;
}

message PartitionValueState {
    optional PartitionValue value = 1;
    uint64 next_offset = 2;
}

message PartitionValue {
  oneof value {
    google.protobuf.Empty null_value = 1;

    int32 int8_value = 2;
    int32 int16_value = 3;
    int32 int32_value = 4;
    int64 int64_value = 5;

    uint32 uint8_value = 6;
    uint32 uint16_value = 7;
    uint32 uint32_value = 8;
    uint64 uint64_value = 9;

    string string_value = 10;
    bytes bytes_value = 11;
    bool bool_value = 12;
  }
}

message CommitBatchRequest {
  /// The requested timestamp (if any) of the batch.
  optional google.protobuf.Timestamp timestamp = 1;
  /// The number of messages in the batch.
  uint32 num_messages = 2;
}

message CommitBatchResponse {
  message Success {
    /// The offset assigned to the first message in the batch.
    uint64 start_offset = 1;
    /// The offset assigned to the last message in the batch.
    uint64 end_offset = 2;
    /// The timestamp assigned to the batch.
    google.protobuf.Timestamp timestamp = 3;
  }

  message Failure {
    /// The numerical error code.
    uint32 error_code = 1;
    /// The human-readable error message.
    string error_message = 2;
  }

  oneof result {
    Success success = 1;
    Failure failure = 2;
  }
}
